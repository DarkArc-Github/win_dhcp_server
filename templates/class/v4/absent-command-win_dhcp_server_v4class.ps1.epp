<%- |
Optional[Enum['User', 'Vendor']] $class_type = undef,
Optional[String[1]] $class_name = undef,
Optional[String[1]] $class_data = undef
| -%>
import-module dhcpserver;
<% if $class_type { -%>
[String]$ClassType = '<%= $class_type %>';
<% } else { -%>
$ClassType = $null;
<% } -%>
<% if $class_name { -%>
[String]$ClassName = '<%= $class_name %>';
<% } else { -%>
$ClassName = $null;
<% } -%>
<% if $class_data { -%>
[String]$ClassData = '<%= $class_data %>'
<% } else { -%>
$ClassData = $null;
<% } -%>

if(($null -eq $ClassName) -and ($null -eq $ClassData)){
  Write-Warning "null dhcpserver IPv4 class name, and null data for ensure => absent.  check data.  cannot continue.";
  exit 1;
}

if($null -ne $ClassName){
  $existingClass = Get-DhcpServerv4Class -Name $ClassName -ErrorAction SilentlyContinue;
  if($null -ne $existingClass){
    if($null -ne $ClassType){
      if($existingClass.Type -ne $ClassType){exit 0;} #practitioner specified class type explicitly and there is mismatch on ensure => absent
      Remove-DhcpServerv4Class -Name $ClassName -Type $ClassType -Confirm:$false;
      Write-Output ("removed IPv4 class - name: {0}, type: {1}, found by name with type match from data" -f $ClassName, $ClassType);
      exit 0;
    }
      Remove-DhcpServerv4Class -Name $ClassName -Type $existingClass.Type -Confirm:$false;
      Write-Output ("removed IPv4 class - name: {0}, type: {1}, found by name" -f $ClassName, $ClassType);
      exit 0;
  }
}

if($null -ne $ClassData){
  $existingClass = Get-DhcpServerv4Class | where 'AsciiData' -eq $ClassData;
  if($null -ne $existingClass){
    if($null -ne $ClassType){
      if($existingClass.Type -ne $ClassType){exit 0;} #practitioner specified class type explicitly and there is mismatch on ensure => absent
      Remove-DhcpServerv4Class -Name $existingClass.Name -Type $ClassType -Confirm:$false;
      Write-Output ("removed IPv4 class - name: {0}, data: {1}, type: {2}, found by AsciiData match with type from data" -f $existingClass.Name, $ClassData, $ClassType);
      exit 0;
    }
      Remove-DhcpServerv4Class -Name $existingClass.Name -Type $existingClass.Type -Confirm:$false;
      Write-Output ("removed IPv4 class - name: {0}, data: {1}, type: {2}, found by AsciiData match" -f $exsitingClass.Name, $ClassData, $existingClass.Type);
      exit 0;
  }
}


